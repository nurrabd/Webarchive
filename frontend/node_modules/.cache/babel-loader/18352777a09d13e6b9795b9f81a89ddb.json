{"ast":null,"code":"var _jsxFileName = \"/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport { getUsersById, deleteSite } from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n  componentDidMount() {\n    this.props.getUsersById(this.props.match.params.id);\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      siteId: ''\n    };\n  }\n\n  onDeleteClick() {\n    const id = this.state.siteId;\n    console.log(id);\n    console.log(this.state.siteId);\n    this.props.deleteSite(id, this.props.history);\n    window.location.reload();\n  }\n\n  renderWorkEx() {\n    return _.map(this.props.user.sites, list => {\n      this.state.siteId = list.siteId;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Site name:   \", list.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \"Site color:  \", list.color, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"Site description:  \", list.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \"Site URL:  \", list.URL, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outline-danger\",\n        size: \"sm\",\n        block: true,\n        onClick: this.onDeleteClick.bind(this),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Delete\"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"glyphicon glyphicon-plus\",\n      to: \"/addSite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add new Site\"), React.createElement(\"div\", {\n      Style: \"margin-top: 50px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.renderWorkEx()));\n  }\n\n}\n\nSitePage.propTypes = {\n  getUsersById: PropTypes.func.isRequired,\n  deleteSite: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n  getUsersById,\n  deleteSite\n})(SitePage);","map":{"version":3,"sources":["/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx"],"names":["React","Component","Link","PropTypes","connect","_","getUsersById","deleteSite","Button","SitePage","componentDidMount","props","match","params","id","constructor","state","siteId","onDeleteClick","console","log","history","window","location","reload","renderWorkEx","map","user","sites","list","name","color","description","URL","bind","render","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash';\nimport {getUsersById, deleteSite} from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n\n\n\n\n    componentDidMount() {\n        this.props.getUsersById(this.props.match.params.id);\n\n\n    }\n    constructor() {\n        super();\n\n        this.state = {\n\n            siteId: '',\n\n        };\n\n\n\n\n    }\n    onDeleteClick() {\n\n        const id = this.state.siteId;\n        console.log(id);\n        console.log( this.state.siteId);\n        this.props.deleteSite(id, this.props.history);\n        window.location.reload();\n\n    }\n\n\n    renderWorkEx() {\n\n\n        return _.map(this.props.user.sites, list => {\n            this.state.siteId = list.siteId;\n\n\n\n\n            return (\n                \n\n                <div>\n                    Site name:   {list.name}\n                    <br/>\n                    Site color:  {list.color}\n                    <br/>\n                    Site description:  {list.description}\n                    <br/>\n                    Site URL:  {list.URL}\n\n\n\n                    <hr/>\n                    <Button\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        block\n                        onClick={this.onDeleteClick.bind(this)}\n                        type=\"submit\">\n\n                        Delete\n                    </Button>\n\n                </div>\n            )\n        });\n    }\n\n\n    render() {\n\n\n        return (\n            <div>\n                <Link className=\"glyphicon glyphicon-plus\"  to={`/addSite`}>\n                    Add new Site\n                </Link>\n\n                <div Style=\"margin-top: 50px\" />\n\n                <div className=\"ui divided list\">\n                    { this.renderWorkEx()}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nSitePage.propTypes = {\n    getUsersById: PropTypes.func.isRequired,\n    deleteSite: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {getUsersById, deleteSite})(SitePage);\n"]},"metadata":{},"sourceType":"module"}