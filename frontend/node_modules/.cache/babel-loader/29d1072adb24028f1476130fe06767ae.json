{"ast":null,"code":"var _jsxFileName = \"/Users/nurabd/Documents/work/Webarchive/frontend/src/components/UppdateSiteComponent.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getSitesById, updateSite } from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass UppdateSiteComponent extends Component {\n  componentDidMount() {\n    this.props.getSitesById(this.props.match.params.id); //\n\n    console.log(this.props.user.userId);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _nextProps$site = nextProps.site,\n          userId = _nextProps$site.userId,\n          name = _nextProps$site.name,\n          color = _nextProps$site.color,\n          description = _nextProps$site.description,\n          URL = _nextProps$site.URL;\n    this.setState({\n      userId,\n      name,\n      color,\n      description,\n      URL\n    });\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      userId: \"\",\n      name: '',\n      color: '',\n      description: '',\n      URL: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const newSite = {\n      userId: this.props.user.userId,\n      name: this.state.name,\n      color: this.state.color,\n      description: this.state.description,\n      URL: this.state.URL\n    };\n    this.props.updateSite(newSite, this.props.history, this.props.user.userId);\n  }\n\n  onDeleteClick() {\n    this.props.deleteSite(this.props.match.id, this.props.history, this.props.user.userId);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      Style: \"margin-top: 100px; background-color:#f8f8f8; border:outset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      Style: \"font-family:serif; font-size:35px; text-align: center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Add new site \"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"form-control\",\n      Style: \"height:50px; border: outset\",\n      placeholder: \"name\",\n      name: \"name\",\n      required: true,\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" color\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"color\",\n      className: \"form-control\",\n      Style: \"height:50px; border: outset\",\n      placeholder: \"color\",\n      name: \"color\",\n      required: true,\n      value: this.state.color,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" description\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      className: \"form-control\",\n      Style: \"height:50px; border: outset\",\n      placeholder: \"description\",\n      name: \"description\",\n      required: true,\n      value: this.state.description,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"URL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \" URL\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"URL\",\n      className: \"form-control\",\n      Style: \"height:50px; border: outset\",\n      placeholder: \"URL\",\n      name: \"URL\",\n      required: true,\n      value: this.state.URL,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      Style: \"width:100%; height:50px\",\n      className: \"btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" Continue\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      variant: \"outline-danger\",\n      size: \"sm\",\n      block: true,\n      onClick: this.onDeleteClick.bind(this),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nUppdateSiteComponent.propTypes = {\n  getSitesById: PropTypes.func.isRequired,\n  updateSite: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  site: state.site.site,\n  user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n  getSitesById,\n  updateSite\n})(UppdateSiteComponent);","map":{"version":3,"sources":["/Users/nurabd/Documents/work/Webarchive/frontend/src/components/UppdateSiteComponent.jsx"],"names":["React","Component","PropTypes","connect","getSitesById","updateSite","Button","UppdateSiteComponent","componentDidMount","props","match","params","id","console","log","user","userId","componentWillReceiveProps","nextProps","site","name","color","description","URL","setState","constructor","state","onChange","bind","onSubmit","e","target","value","event","preventDefault","newSite","history","onDeleteClick","deleteSite","render","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\"\nimport {connect} from \"react-redux\";\nimport {getSitesById, updateSite} from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\n\n\nclass UppdateSiteComponent extends Component {\n\n    componentDidMount() {\n         this.props.getSitesById(this.props.match.params.id);\n        //\n        console.log(this.props.user.userId);\n    }\n    componentWillReceiveProps(nextProps) {\n        const {\n            userId,\n            name,\n            color,\n            description,\n            URL\n\n        } = nextProps.site;\n\n        this.setState({\n            userId,\n            name,\n            color,\n            description,\n            URL\n        });\n    }\n\n    constructor() {\n        super();\n\n        this.state = {\n            userId: \"\",\n            name: '',\n            color: '',\n            description: '',\n            URL: ''\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n    onSubmit(event) {\n        event.preventDefault();\n        const newSite = {\n            userId:this.props.user.userId,\n            name: this.state.name,\n            color: this.state.color,\n            description: this.state.description,\n            URL: this.state.URL\n\n        };\n\n        this.props.updateSite(newSite, this.props.history, this.props.user.userId);\n\n    }\n\n    onDeleteClick() {\n\n\n        this.props.deleteSite(this.props.match.id, this.props.history, this.props.user.userId);\n\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\" Style=\"margin-top: 100px; background-color:#f8f8f8; border:outset\">\n                <h4 Style=\"font-family:serif; font-size:35px; text-align: center\">Add new site </h4>\n                <div className=\"row\">\n\n                    <div className=\"col\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"row\">\n                                <div className=\"col\">\n\n\n                                    <p/>\n                                    <label htmlFor=\"email\"> Name</label>\n                                    <input type=\"text\" id=\"name\" className=\"form-control\"\n                                           Style=\"height:50px; border: outset\"\n                                           placeholder=\"name\"\n                                           name=\"name\"\n                                           required\n                                           value={this.state.name}\n                                           onChange={this.onChange}\n                                    />\n                                    <p/>\n                                    <label htmlFor=\"color\"> color</label>\n                                    <input type=\"text\" id=\"color\" className=\"form-control\"\n                                           Style=\"height:50px; border: outset\"\n                                           placeholder=\"color\"\n                                           name=\"color\"\n                                           required\n                                           value={this.state.color}\n                                           onChange={this.onChange}\n\n                                    />\n                                    <label htmlFor=\"description\"> description</label>\n                                    <input type=\"text\" id=\"description\" className=\"form-control\"\n                                           Style=\"height:50px; border: outset\"\n                                           placeholder=\"description\"\n                                           name=\"description\"\n                                           required\n                                           value={this.state.description}\n                                           onChange={this.onChange}\n\n                                    />\n                                    <label htmlFor=\"URL\"> URL</label>\n                                    <input type=\"text\" id=\"URL\" className=\"form-control\"\n                                           Style=\"height:50px; border: outset\"\n                                           placeholder=\"URL\"\n                                           name=\"URL\"\n                                           required\n                                           value={this.state.URL}\n                                           onChange={this.onChange}\n\n                                    />\n                                </div>\n                            </div>\n                            <p/>\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <p/>\n                                    <button type=\"submit\" Style=\"width:100%; height:50px\"\n                                            className=\"btn-primary\"> Continue\n                                    </button>\n                                    <p/>\n                                </div>\n                            </div>\n                        </form>\n                        <Button\n                            variant=\"outline-danger\"\n                            size=\"sm\"\n                            block\n                            onClick={this.onDeleteClick.bind(this)}\n                            type=\"submit\">\n\n                            Delete\n                        </Button>\n                    </div>\n                </div>\n\n\n\n\n\n            </div>\n\n\n        );\n    }\n}\n\nUppdateSiteComponent.propTypes = {\n    getSitesById: PropTypes.func.isRequired,\n    updateSite: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    site: state.site.site,\n    user: state.user.user\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {getSitesById, updateSite})(UppdateSiteComponent);\n"]},"metadata":{},"sourceType":"module"}