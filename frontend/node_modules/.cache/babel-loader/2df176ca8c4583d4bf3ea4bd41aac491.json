{"ast":null,"code":"import axios from \"axios\";\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_SITES = 'FETCH_SITES';\nexport const getUsersById = id => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/api/user/findUserById/\".concat(id));\n  dispatch({\n    type: FETCH_USER,\n    payload: res.data\n  });\n};\nexport const registerUsers = (newuser, history) => async dispatch => {\n  const res = await axios.post(\"http://localhost:8080/api/user/register\", newuser);\n\n  if (res.status === 200) {\n    history.push(\"/success\");\n  }\n};\nexport const login = (theUser, history) => async dispatch => {\n  const res = await axios.post(\"http://localhost:8080/api/user/login\", theUser);\n\n  if (res.status === 200) {\n    history.push(\"/success/\".concat(res.data.userId));\n  }\n};\nexport const AddNewSite = (theUser, history, id) => async dispatch => {\n  await axios.post(\"http://localhost:8080/api/site/register\", theUser);\n  history.push(\"/success/\".concat(id));\n};\nexport const getSitesById = id => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/api/site/findSiteById/\".concat(id));\n  dispatch({\n    type: FETCH_SITES,\n    payload: res.data\n  });\n};\nexport const updateSite = (siteId, update, history, userId) => async dispatch => {\n  await axios.put(\"http://localhost:8080/api/site/update/\".concat(siteId), update);\n  history.push(\"/success/\".concat(userId));\n  console.log(siteId);\n};\nexport const deleteSite = (siteId, histroy, userId) => async dispatch => {\n  console.log(siteId);\n  await axios.delete(\"http://localhost:8080/api/site/delete/\".concat(siteId));\n  histroy.push(\"/success/\".concat(userId));\n};","map":{"version":3,"sources":["/Users/nurabd/Documents/work/Webarchive/frontend/src/actions/Actions.js"],"names":["axios","FETCH_USER","FETCH_SITES","getUsersById","id","dispatch","res","get","type","payload","data","registerUsers","newuser","history","post","status","push","login","theUser","userId","AddNewSite","getSitesById","updateSite","siteId","update","put","console","log","deleteSite","histroy","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAKP,OAAO,MAAMC,YAAY,GAAIC,EAAD,IAAQ,MAAMC,QAAN,IAAkB;AAElD,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,uDAAyDH,EAAzD,EAAlB;AACAC,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEP,UADD;AAELQ,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB,MAAMR,QAAN,IAAkB;AACjE,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACc,IAAN,4CAAsDF,OAAtD,CAAlB;;AACD,MAAGN,GAAG,CAACS,MAAJ,KAAa,GAAhB,EAAoB;AAChBF,IAAAA,OAAO,CAACG,IAAR,CAAa,UAAb;AACH;AACH,CALM;AAOP,OAAO,MAAMC,KAAK,GAAG,CAACC,OAAD,EAAUL,OAAV,KAAsB,MAAMR,QAAN,IAAkB;AACzD,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACc,IAAN,yCAAmDI,OAAnD,CAAlB;;AACA,MAAGZ,GAAG,CAACS,MAAJ,KAAa,GAAhB,EAAoB;AAEhBF,IAAAA,OAAO,CAACG,IAAR,oBAAyBV,GAAG,CAACI,IAAJ,CAASS,MAAlC;AACH;AACJ,CANM;AAQP,OAAO,MAAMC,UAAU,GAAG,CAACF,OAAD,EAAUL,OAAV,EAAmBT,EAAnB,KAA0B,MAAMC,QAAN,IAAkB;AACjE,QAAML,KAAK,CAACc,IAAN,4CAAsDI,OAAtD,CAAN;AACDL,EAAAA,OAAO,CAACG,IAAR,oBAAyBZ,EAAzB;AAEH,CAJM;AAQP,OAAO,MAAMiB,YAAY,GAAIjB,EAAD,IAAQ,MAAMC,QAAN,IAAkB;AAElD,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,uDAAyDH,EAAzD,EAAlB;AACAC,EAAAA,QAAQ,CAAC;AACLG,IAAAA,IAAI,EAAEN,WADD;AAELO,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,GAAD,CAAR;AAIH,CAPM;AASP,OAAO,MAAMY,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBX,OAAjB,EAA0BM,MAA1B,KAAqC,MAAMd,QAAN,IAAkB;AAC7E,QAAML,KAAK,CAACyB,GAAN,iDAAmDF,MAAnD,GAA6DC,MAA7D,CAAN;AACDX,EAAAA,OAAO,CAACG,IAAR,oBAAyBG,MAAzB;AACCO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEH,CALM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACL,MAAD,EAASM,OAAT,EAAmBV,MAAnB,KAA8B,MAAMd,QAAN,IAAkB;AACtEqB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,QAAMvB,KAAK,CAAC8B,MAAN,iDAAsDP,MAAtD,EAAN;AACIM,EAAAA,OAAO,CAACb,IAAR,oBAAyBG,MAAzB;AACP,CALM","sourcesContent":["import axios from \"axios\";\n\n\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_SITES = 'FETCH_SITES';\n\n\n\n\nexport const getUsersById = (id) => async dispatch => {\n\n    const res = await axios.get(`http://localhost:8080/api/user/findUserById/${id}`);\n    dispatch({\n        type: FETCH_USER,\n        payload: res.data\n    });\n};\n\nexport const registerUsers = (newuser, history) => async dispatch => {\n    const res = await axios.post(`http://localhost:8080/api/user/register`, newuser);\n   if(res.status===200){\n       history.push(\"/success\")\n   }\n};\n\nexport const login = (theUser, history) => async dispatch => {\n    const res = await axios.post(`http://localhost:8080/api/user/login`, theUser);\n    if(res.status===200){\n\n        history.push(`/success/${res.data.userId}`)\n    }\n};\n\nexport const AddNewSite = (theUser, history, id) => async dispatch => {\n     await axios.post(`http://localhost:8080/api/site/register`, theUser);\n    history.push(`/success/${id}`)\n\n};\n\n\n\nexport const getSitesById = (id) => async dispatch => {\n\n    const res = await axios.get(`http://localhost:8080/api/site/findSiteById/${id}`);\n    dispatch({\n        type: FETCH_SITES,\n        payload: res.data\n    });\n};\n\nexport const updateSite = (siteId, update, history, userId) => async dispatch => {\n    await axios.put(`http://localhost:8080/api/site/update/${siteId}`, update);\n   history.push(`/success/${userId}`);\n    console.log(siteId);\n\n};\n\nexport const deleteSite = (siteId, histroy , userId) => async dispatch => {\n    console.log(siteId);\n\n    await axios.delete(`http://localhost:8080/api/site/delete/${siteId}`);\n        histroy.push(`/success/${userId}`);\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}