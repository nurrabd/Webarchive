{"ast":null,"code":"var _jsxFileName = \"/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport { getUsersById, deleteSite } from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n  componentDidMount() {\n    this.props.getUsersById(this.props.match.params.id); //console.log(this.props.user.id);\n  }\n\n  onDeleteClick() {\n    const id = \"\";\n    this.props.deleteSite(id, this.props.history, 1);\n    window.location.reload();\n  }\n\n  renderWorkEx() {\n    return _.map(this.props.user.sites, list => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Site name:   \", list.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \"Site color:  \", list.color, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \"Site description:  \", list.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \"Site URL:  \", list.URL, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"outline-danger\",\n        size: \"lg\",\n        block: true,\n        onClick: this.onDeleteClick.bind(this),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Delete\"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"glyphicon glyphicon-plus\",\n      to: \"/addSite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Add new Site\"), React.createElement(\"div\", {\n      Style: \"margin-top: 50px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.renderWorkEx()));\n  }\n\n}\n\nSitePage.propTypes = {\n  getUsersById: PropTypes.func.isRequired,\n  deleteSite: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n  getUsersById,\n  deleteSite\n})(SitePage);","map":{"version":3,"sources":["/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx"],"names":["React","Component","Link","PropTypes","connect","_","getUsersById","deleteSite","Button","SitePage","componentDidMount","props","match","params","id","onDeleteClick","history","window","location","reload","renderWorkEx","map","user","sites","list","name","color","description","URL","bind","render","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,oBAAvC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAKzBS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,YAAX,CAAwB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,EADgB,CAEhB;AAEP;;AACDC,EAAAA,aAAa,GAAG;AACZ,UAAMD,EAAE,GAAG,EAAX;AACA,SAAKH,KAAL,CAAWJ,UAAX,CAAsBO,EAAtB,EAA0B,KAAKH,KAAL,CAAWK,OAArC,EAA8C,CAA9C;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEH;;AAEDC,EAAAA,YAAY,GAAG;AAEX,WAAOf,CAAC,CAACgB,GAAF,CAAM,KAAKV,KAAL,CAAWW,IAAX,CAAgBC,KAAtB,EAA6BC,IAAI,IAAI;AAGxC,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBA,IAAI,CAACC,IADvB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,mBAGkBD,IAAI,CAACE,KAHvB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,yBAKwBF,IAAI,CAACG,WAL7B,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,iBAOgBH,IAAI,CAACI,GAPrB,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAC,gBADZ;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,KAAK,MAHT;AAII,QAAA,OAAO,EAAE,KAAKb,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,CAJb;AAKI,QAAA,IAAI,EAAC,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,CAFJ;AAyBH,KA5BM,CAAP;AA6BH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA4C,MAAA,EAAE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAKI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKV,YAAL,EADN,CAPA,CADJ;AAcH;;AAnE4B;;AAsEjCX,QAAQ,CAACsB,SAAT,GAAqB;AACjBzB,EAAAA,YAAY,EAAEH,SAAS,CAAC6B,IAAV,CAAeC,UADZ;AAEjB1B,EAAAA,UAAU,EAAEJ,SAAS,CAAC6B,IAAV,CAAeC;AAFV,CAArB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb,IAAN,CAAWA;AADa,CAAL,CAA7B;;AAKA,eAAelB,OAAO,CAClB8B,eADkB,EAElB;AAAC5B,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAFkB,CAAP,CAEiBE,QAFjB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash';\nimport {getUsersById, deleteSite} from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n\n\n\n\n        componentDidMount() {\n            this.props.getUsersById(this.props.match.params.id);\n            //console.log(this.props.user.id);\n\n    }\n    onDeleteClick() {\n        const id = \"\";\n        this.props.deleteSite(id, this.props.history, 1);\n        window.location.reload();\n\n    }\n\n    renderWorkEx() {\n\n        return _.map(this.props.user.sites, list => {\n\n\n            return (\n\n                <div>\n                    Site name:   {list.name}\n                    <br/>\n                    Site color:  {list.color}\n                    <br/>\n                    Site description:  {list.description}\n                    <br/>\n                    Site URL:  {list.URL}\n\n\n                    <hr/>\n                    <Button\n                        variant=\"outline-danger\"\n                        size=\"lg\"\n                        block\n                        onClick={this.onDeleteClick.bind(this)}\n                        type=\"submit\">\n\n                        Delete\n                    </Button>\n\n                </div>\n            )\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n            <Link className=\"glyphicon glyphicon-plus\"  to={`/addSite`}>\n                Add new Site\n            </Link>\n\n                <div Style=\"margin-top: 50px\" />\n\n            <div className=\"ui divided list\">\n                { this.renderWorkEx()}\n            </div>\n            </div>\n\n        );\n    }\n}\n\nSitePage.propTypes = {\n    getUsersById: PropTypes.func.isRequired,\n    deleteSite: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {getUsersById, deleteSite})(SitePage);\n"]},"metadata":{},"sourceType":"module"}