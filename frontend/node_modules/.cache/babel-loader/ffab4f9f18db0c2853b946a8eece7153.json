{"ast":null,"code":"var _jsxFileName = \"/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport _ from 'lodash';\nimport { getUsersById, deleteSite } from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n  componentDidMount() {\n    this.props.getUsersById(this.props.match.params.id);\n  }\n\n  renderWorkEx() {\n    return _.map(this.props.user.sites, list => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Site name:   \", list.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \"Site color:  \", list.color, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), \"Site description:  \", list.description, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), \"Site URL:  \", list.URL, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"glyphicon glyphicon-plus\",\n      to: \"/addSite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Add new Site\"), React.createElement(\"div\", {\n      Style: \"margin-top: 50px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.renderWorkEx()));\n  }\n\n}\n\nSitePage.propTypes = {\n  getUsersById: PropTypes.func.isRequired,\n  deleteSite: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user.user\n});\n\nexport default connect(mapStateToProps, {\n  getUsersById,\n  deleteSite\n})(SitePage);","map":{"version":3,"sources":["/Users/nurabd/Documents/work/Webarchive/frontend/src/components/SitePage.jsx"],"names":["React","Component","Link","PropTypes","connect","_","getUsersById","deleteSite","Button","SitePage","componentDidMount","props","match","params","id","renderWorkEx","map","user","sites","list","name","color","description","URL","render","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,oBAAvC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC7BS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,YAAX,CAAwB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,WAAOV,CAAC,CAACW,GAAF,CAAM,KAAKL,KAAL,CAAWM,IAAX,CAAgBC,KAAtB,EAA6BC,IAAI,IAAI;AACxC,aAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBA,IAAI,CAACC,IADvB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,mBAGkBD,IAAI,CAACE,KAHvB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,yBAKwBF,IAAI,CAACG,WAL7B,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,iBAOgBH,IAAI,CAACI,GAPrB,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAUhB,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVgB,CAHJ;AAiBH,KAlBM,CAAP;AAmBH;;AAGDC,EAAAA,MAAM,GAAG;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAA4C,MAAA,EAAE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAKI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKT,YAAL,EADN,CAPJ,CADJ;AAcH;;AA7C4B;;AAgDjCN,QAAQ,CAACgB,SAAT,GAAqB;AACjBnB,EAAAA,YAAY,EAAEH,SAAS,CAACuB,IAAV,CAAeC,UADZ;AAEjBpB,EAAAA,UAAU,EAAEJ,SAAS,CAACuB,IAAV,CAAeC;AAFV,CAArB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ,IAAN,CAAWA;AADa,CAAL,CAA7B;;AAKA,eAAeb,OAAO,CAClBwB,eADkB,EAElB;AAACtB,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAFkB,CAAP,CAEiBE,QAFjB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash';\nimport {getUsersById, deleteSite} from \"../actions/Actions\";\nimport Button from \"react-bootstrap/Button\";\n\nclass SitePage extends Component {\n    componentDidMount() {\n        this.props.getUsersById(this.props.match.params.id);\n    }\n\n    renderWorkEx() {\n        return _.map(this.props.user.sites, list => {\n            return (\n\n\n                <div>\n                    Site name:   {list.name}\n                    <br/>\n                    Site color:  {list.color}\n                    <br/>\n                    Site description:  {list.description}\n                    <br/>\n                    Site URL:  {list.URL}\n\n                    <hr/>\n<Link to=\"\"/>\n\n                </div>\n            )\n        });\n    }\n\n\n    render() {\n\n\n        return (\n            <div>\n                <Link className=\"glyphicon glyphicon-plus\"  to={`/addSite`}>\n                    Add new Site\n                </Link>\n\n                <div Style=\"margin-top: 50px\" />\n\n                <div className=\"ui divided list\">\n                    { this.renderWorkEx()}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nSitePage.propTypes = {\n    getUsersById: PropTypes.func.isRequired,\n    deleteSite: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    user: state.user.user\n\n});\n\nexport default connect(\n    mapStateToProps,\n    {getUsersById, deleteSite})(SitePage);\n"]},"metadata":{},"sourceType":"module"}